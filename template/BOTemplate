package ${Context.clazPackage}domain.bo$!{Context.module};

#if($tableDO.containDate())
import java.util.Date;

#end
#if($tableDO.hasFeature())
import com.intkr.saas.util.JsonUtil;
import java.util.HashMap;
import java.util.Map;

#end
import com.intkr.saas.domain.BaseBO;

/**
 * $!{tableDO.desc}
 * 
 * @table $!{tableDO.name}
 * 
 * @author Beiden
 * @date $!{Context.getTime()}
 * @version 1.0
 */
public class $!{tableDO.getClazName()}BO extends BaseBO<$!{tableDO.getClazName()}BO> {

	private static final long serialVersionUID = 1L;

#foreach($column in $tableDO.columns)
#if($!{column.name} == "id" 
	|| $!{column.name} == "gmt_modified" 
	|| $!{column.name} == "gmtModified" 
	|| $!{column.name} == "is_deleted" 
	|| $!{column.name} == "isDeleted" 
	|| $!{column.name} == "ctime" 
	|| $!{column.name} == "ctime" 
	|| $!{column.name} == "gmt_created" 
	|| $!{column.name} == "gmtCreated")#else
	// $!{column.desc}
	private $!{column.clazType} $!{column.getProName()};

#end#end
#foreach($column in $tableDO.columns)#if($!{column.name} == "id" 
										|| $!{column.name} == "gmt_modified" 
										|| $!{column.name} == "gmtModified" 
										|| $!{column.name} == "is_deleted" 
										|| $!{column.name} == "isDeleted" 
										|| $!{column.name} == "ctime" 
										|| $!{column.name} == "mtime" 
										|| $!{column.name} == "gmt_created" 
										|| $!{column.name} == "gmtCreated")#else
	public $!{column.clazType} get$!{column.getClazName()}() {
		return $!{column.getProName()};
	}

	public void set$!{column.getClazName()}($!{column.clazType} $!{column.getProName()}) {
		this.$!{column.getProName()} = $!{column.getProName()};
	}

#end#end
#if($tableDO.hasFeature())
	public Object getFeature(String key) {
		Map<String, Object> map = JsonUtil.toObject(feature, Map.class);
		if (map == null) {
			return null;
		}
		return map.get(key);
	}

	public void setFeature(String key, Object value) {
		Map<String, Object> map = JsonUtil.toObject(feature, Map.class);
		if (map == null) {
			map = new HashMap<String, Object>();
		}
		map.put(key, value);
		this.feature = JsonUtil.toJson(map);
	}

#end
}
